#!/bin/bash


while getopts ":rx:l:" args ; do
	
	case $args in
	r)
		echo "Delete all the duplicates"	
	;;
	x)
		echo "Exclude the following file $OPTARG"
	;;
	l)
		echo "Landcode $OPTARG"
	;;
	:)
		echo "Oops! forgot to give an imput for $OPTARG"
	;;
	/?)
		echo "Please give a valid input"
	;;	
	esac
done

shift $((OPTIND-1))

find_dupe(){
	
	while read -r line ; do
		
		sha=$( shasum -a 256 "$line" ) #creates sha for all the files currencly searching
		sha_collection+=("$sha")
		#printf "%s SHA: %s \\n" "$line" "$sha" 
		
	done < <(find . -type f)	
	
	if [ "${#sha_collection[@]}" -eq 0 ] ; then       
		echo "There are no files to check"
	else
	       	duplicates=$(printf '%s\n' "${sha_collection[@]}" | awk '!($1 in dupe) { dupe[$1]; next; } 1')
			printf '%s \n' "$duplicates"
			
			amountDuplicatesFound=$(wc -l <<< "$duplicates")
	fi
}

#Het script maakt een directory ~/var en voegt regels aan een log file toe (duper.log) waarin diverse zaken omtrent het proces worden opgeslagen, zoals bijvoorbeeld: start-tijd, eind-tijd
log_process() {
	if [ ! -d "$HOME/var" ]; then
		mkdir ~/var
	fi
	
	
	
	endTime=$(date "+%a %d %b %Y %T:%N")
	logOutput="StartTime $startTime \\nEndTime: $endTime \\nAmount duplicates found: $amountDuplicatesFound\\n"
	
	echo -e "$logOutput" >> ~/var/duper.log
}

amountDuplicatesFound=0;

startTime=$(date "+%a %d %b %Y %T:%N")
declare -a sha_collection


find_dupe
log_process "$startTime"

