#!/bin/bash

contains(){

	local item=$(basename $1)
	local array+=($@)

	#echo "Item: $item"
	#printf '%s\n' "${array[@]}"

	for i in "${array[@]}" ; do  [[ "$item" ==  "$i" ]] && return 0 
	done

	return 1
}

find_dupe(){
	
	local duplicates=
	local sha=
	local sha_collection=()

	while read -r line ; do
		
		local isExcluded=
		contains "$line" "${excluded_files[@]}"
		isExcluded=$?	
			
		if [ $isExcluded -eq 0 ] ; then
		       echo "This file is excluded $line"
	       	else	       

			sha=$( shasum -a 256 "$line" ) #creates sha for all the files currencly searching
			sha_collection+=("$sha")
			#printf "%s SHA: %s \\n" "$line" "$sha" 
		fi

	done < <(find . -type f)	
	
	if [ "${#sha_collection[@]}" -eq 0 ] ; then       
		echo "There are no files to check"
	else
		duplicates=$(printf '%s\n' "${sha_collection[@]}" | awk '!($1 in dupe) { dupe[$1]; next; } 1')
		dupe_path=$(printf '%s\n' "$duplicates" | awk '{print $2}' )

		#printf '%s\n' "$dupePath"
		
		[ -z "$duplicates" ] || printf 'Duplicate found: %s \n' "$duplicates"
		amountDuplicatesFound=$(wc -l <<< "$duplicates")
	fi
}

remove_dupe(){
	
	if [ ! -z "$remove" ] ; then

		for file in $dupe_path ;  do
			echo "Removed: $file"
			rm "$file"
		done
	fi
}

# Het script maakt een directory ~/var en voegt regels aan een log file toe (duper.log) waarin diverse zaken omtrent het proces worden opgeslagen, zoals bijvoorbeeld: start-tijd, eind-tijd
log_process() {
	if [ ! -d "$HOME/var" ]; then
		mkdir ~/var
	fi
	
	endTime=$(date "+%a %d %b %Y %T:%N")
	
	logOutput="StartTime $startTime \\nEndTime: $endTime"
	
	if [ -z "$remove" ] ; then
		logOutput+="\\nAmount duplicates found: $amountDuplicatesFound\\n"
	else
		logOutput+="\\nAmount duplicates found and removed: $amountDuplicatesFound\\n"
	fi
		
	echo -e "$logOutput" >> ~/var/duper.log
}

amountDuplicatesFound=0;
startTime=$(date "+%a %d %b %Y %T:%N")

remove=
declare -a dupe_path
declare -a excluded_files

while getopts ":rx:l:" args ; do
	
	case $args in
	r)
		echo "Delete all the duplicates"
		remove=true	
	;;
	x)
		#echo "Exclude the following file $OPTARG"
		excluded_files+=("$OPTARG")
	;;
	l)
		echo "Landcode $OPTARG"
	;;
	:)
		echo "Oops! forgot to give an imput for $OPTARG"
	;;
	/?)
    	echo "Usage: DELETE -r | EXCLUDE -x <name> | LANGUAGE -l <code>"
		exit 2
	;;	
	esac
done

shift $((OPTIND-1))


# Get folder direction		
if [ -z "$1" ]; then
	echo "Please provide a directory"	
	exit 2;	
else	
	# Check if valid directory.	
	if [ ! -d "$1" ]; then	
		echo "Given path is not a directory or does not exist";	
		exit 2;	
	fi	

 	if [ ! -w "$1" ]; then	
		echo "You do not have write permission for this directory"	
		exit 2;	
	fi	
fi

startDirectory="$1"

find_dupe
remove_dupe

# Has to be called at the end of the script
log_process


