#!/bin/bash


while getopts ":rx:l:" args ; do
	
	case $args in
	r)
		echo "Delete all the duplicates"	
	;;
	x)
		echo "Exclude the following file $OPTARG"
	;;
	l)
		echo "Landcode $OPTARG"
	;;
	:)
		echo "Oops! forgot to give an imput for $OPTARG"
	;;
	/?)
		echo "Please give a valid input"
	;;	
	esac
done

shift $((OPTIND-1))

check_files(){
	
	 while read -r line ; do
		
		sha=$( shasum -a 256 "$line" ) #creates sha for all the files currencly searching
		sha_collection+=("$sha")
		printf "%s SHA: %s \\n" "$line" "$sha" 
		
	done < <(find . -type f) 

	echo "${sha_collection[@]}"
}

find_duplicates(){
	
	echo "${#sha_collection[@]}"

	if [ "${#sha_collection[@]}" -eq 0 ] ; then #check if the there are elements in the array
		echo "There are no files to check"
	else
		printf '%s\n' "${sha_collection[@]}" | awk '($0 in dupe) {dupe[$0]; next } 1'
	fi
}

#Het script maakt een directory ~/var en voegt regels aan een log file toe (duper.log) waarin diverse zaken omtrent het proces worden opgeslagen, zoals bijvoorbeeld: start-tijd, eind-tijd
log_process() {	
	if [ ! -d "~/var" ]; then
		mkdir ~/var
	fi
	
	endTime=`date "+%a %d %b %Y %T:%N"`
	logOutput="StartTime $startTime \nEndTime: $endTime"
	
	echo -e $logOutput > ~/var/duper.log
}

startTime=`date "+%a %d %b %Y %T:%N"`
declare -a sha_collection

sha_collection={"${check_files[@]}"}
find_duplicates

# log the process at the end of the script
log_process $startTime
